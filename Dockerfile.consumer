# Dockerfile.consumer

# Build Stage
FROM golang:latest AS builder
WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download
COPY . .
# Build the consumer binary (from cmd/consumer/main.go)
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o loan_consumer cmd/consumer/main.go

# Final Stage
FROM alpine:latest
WORKDIR /root/
COPY --from=builder /app/loan_consumer .
# Expose a port if needed for debugging; typically consumer services run headless.
ENTRYPOINT ["./loan_consumer"]
